Here are some of the basic commands and instructions for git

0. git config to set username, email etc

1. git clone <url>
creates a copy of the repo
2. git fork <url>
creates a copy of someone else's repo
3. git add <filename> or git add * or git add .
adds file to staging area. git will include the changes in the next revision to the repo.
git ttracks files, not folders. It will respect the folder structure though. Basically empty folders are not tracked.
git add doesn't remove the files that have since been deleted, it only handles new and edited files. 
3a. git add --all handles that.
4. git rm --cached <filename> or git rm --cached -r <directoryname>
removes a file or folder from staging area
5. git commit or git commit -m "commit message"
make a commit duh
6. git diff
shows all the changes made that has yet not been committed
7. git commit -am "message"
adds and then commits in one go
8. git status
tells status of the whole repo
9. git push or git push origin master
sends commit changes to remote repository (master branch to remote repo named origin in the second case)
for the first time you push, use git push -u origin master to track the changes to remote repo
10. git pull <remote> <destination_branch>
receives recent changes from remote repo
11. git remote add origin <url>

Merge Conflicts:
line 1
<<<<< HEAD
line 2                          <- my changes
=============
line 3                          <- remote changes
>>>>>>>>> 019248WEIRDNUMBER     <- unique identifier
line 4 ...
manually resolve and commit again

12. git log
shows a log of all commits and messages
13. git reset --hard <commit hash> or git commit --hard origin/master
reverts code back to the specified version

Branching:
14. git branch
shows all branches
15. git branch <new_branch_name>
create a new branch
16. git checkout <branch_name>
switch to the branch
17. git checkout -b <new_branch_name>
create a branch and then switch to it 
18. git merge <branch_name>
merges that branch to current branch
merging to master is usually not recommended, you may not like how they merged. merge master to this insted. safety
19. git branch -d <branch_name> or git branch -D <branch_name> 
delete a branch or delete a branch without merging

Pull Requests

Starting in your own system:
20. git init or git init <repo_name>
Initialises a/the repo in your working directory
